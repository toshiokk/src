kdiff3 ../old/ucon/config.h config.h ==================================================
kdiff3 ../old/ucon/fbbpp.h fbbpp.h ==================================================
kdiff3 ../old/ucon/fbcommon.h fbcommon.h ==================================================
kdiff3 ../old/ucon/font.h font.h ==================================================
kdiff3 ../old/ucon/hex.h hex.h ==================================================
kdiff3 ../old/ucon/main.h main.h ==================================================
kdiff3 ../old/ucon/message.h message.h ==================================================
kdiff3 ../old/ucon/mydebug.h mydebug.h ==================================================
12c12,13
< ///#define ENABLE_DEBUG
---
> ///
> #define ENABLE_DEBUG
kdiff3 ../old/ucon/myminmax.h myminmax.h ==================================================
kdiff3 ../old/ucon/myselect.h myselect.h ==================================================
kdiff3 ../old/ucon/mytypes.h mytypes.h ==================================================
kdiff3 ../old/ucon/pen.h pen.h ==================================================
kdiff3 ../old/ucon/picofont.h picofont.h ==================================================
kdiff3 ../old/ucon/sequence.h sequence.h ==================================================
kdiff3 ../old/ucon/stdincs.h stdincs.h ==================================================
kdiff3 ../old/ucon/term.h term.h ==================================================
37d36
< ///	int fd_tty_vt;
kdiff3 ../old/ucon/ucon.h ucon.h ==================================================
kdiff3 ../old/ucon/util.h util.h ==================================================
kdiff3 ../old/ucon/vterm.h vterm.h ==================================================
kdiff3 ../old/ucon/vtermlow.h vtermlow.h ==================================================
127a128,130
> //  Full Hi-vision portrait
> //   1080 / 5 = 216
> //   1920 / 10 = 192
131,133c134,145
< //  8K
< //   7680 / 5 = 1536
< //   4320 / 10 = 432
---
> //  4K landscape
> //   3840 / 5 = 768 (current target)
> //   2160 / 10 = 216
> //  4K portrait
> //   2160 / 5 = 432
> //   3840 / 10 = 384 (current target)
> ///  8K
> ///   7680 / 5 = 1536
> ///   4320 / 10 = 432
> ///  8K portrait
> ///   4320 / 5 = 864
> ///   7680 / 10 = 768
136,138c148,151
< ///# define MAX_TERM_COLS	274
< ///# define MAX_TERM_COLS	384
< # define MAX_TERM_COLS	512
---
> ////# define MAX_TERM_COLS	274	// Lap top
> ////# define MAX_TERM_COLS	384	// FHD
> ////# define MAX_TERM_COLS	512	//  WQXGA
> # define MAX_TERM_COLS	768	// 4K landscape
142,144c155,158
< ///#define MAX_TERM_LINES	77
< ///#define MAX_TERM_LINES	108
< #define MAX_TERM_LINES	160
---
> ////#define MAX_TERM_LINES	77	// Lap top
> ////#define MAX_TERM_LINES	108	// FHD
> ////#define MAX_TERM_LINES	160	//  WQXGA
> #define MAX_TERM_LINES	384	// 4K portrait
kdiff3 ../old/ucon/fbbpp.c fbbpp.c ==================================================
30c30
< // global variablas for speed reasons
---
> // global variables for speed reasons
kdiff3 ../old/ucon/fbcommon.c fbcommon.c ==================================================
kdiff3 ../old/ucon/font.c font.c ==================================================
38c38
< #define	SQUARE_SHAPE
---
> ///#define	SQUARE_SHAPE
40c40,41
< ///#define	HUGE_SHAPE
---
> ///
> #define	HUGE_SHAPE
43c44,47
< 	{ 0, 10, 1, 1, },	//  0:  5x10=  50
---
> 	{ 0, 10, 1, 1, },	//  5x10=  50
> #ifdef	TALL_SHAPE
> 	{ 0, 10, 1, 2, },	//  5x20= 100
> #endif
45c49
< 	{ 0, 10, 2, 1, },	//  1: 10x10= 100
---
> 	{ 0, 10, 2, 1, },	// 10x10= 100
46a51,52
> 	{ 0, 10, 2, 2, },	// 10x20= 200
> 	{ 0, 10, 2, 3, },	// 10x30= 300
48c54,61
< 	{ 0, 10, 1, 2, },	//  2:  5x20= 100
---
> 	{ 0, 10, 2, 4, },	// 10x40= 400
> #endif
> 	{ 0, 10, 3, 2, },	// 15x20= 300
> 	{ 0, 10, 3, 3, },	// 15x30= 450
> 	{ 0, 10, 3, 4, },	// 15x40= 600
> 	{ 0, 10, 3, 5, },	// 15x50= 750
> #ifdef	TALL_SHAPE
> 	{ 0, 10, 3, 6, },	// 15x60= 900
50,51d62
< 	{ 0, 10, 2, 2, },	//  3: 10x20= 200
< 	{ 0, 10, 2, 3, },	//  4: 10x30= 300
53,54c64
< 	{ 0, 10, 3, 2, },	//  5: 15x20= 300
< 	{ 0, 10, 4, 2, },	//  6: 20x20= 400
---
> 	{ 0, 10, 4, 2, },	// 20x20= 400
56,59c66,69
< 	{ 0, 10, 3, 3, },	//  7: 15x30= 450
< 	{ 0, 10, 3, 4, },	//  8: 15x40= 600
< 	{ 0, 10, 4, 4, },	//  9: 20x40= 800
< 	{ 1, 12, 1, 1, },	// 10:  6x12=  72
---
> 	{ 0, 10, 4, 3, },	// 20x30= 600
> 	{ 0, 10, 4, 4, },	// 20x40= 800
> #ifdef	HUGE_SHAPE
> 	{ 0, 10, 4, 6, },	// 20x60=1200
61c71
< 	{ 1, 12, 1, 2, },	// 11:  6x24= 144
---
> 	{ 0, 10, 4, 8, },	// 20x80=1600
63,66c73,74
< 	{ 1, 12, 2, 2, },	// 12: 12x24= 288
< 	{ 1, 12, 2, 3, },	// 13: 12x36= 432
< 	{ 1, 12, 3, 3, },	// 14: 18x36= 648
< 	{ 1, 12, 3, 4, },	// 15: 18x48= 864
---
> #endif
> 	{ 0, 10, 5, 3, },	// 25x30= 750
68c76,86
< 	{ 1, 12, 4, 4, },	// 16: 24x48=1152
---
> 	{ 0, 10, 5, 5, },	// 25x50=1250
> 	{ 0, 10, 5, 7, },	// 25x70=1750
> 	{ 0, 10, 5, 9, },	// 25x90=2250
> #endif
>  //----------------------------------
> 	{ 1, 12, 1, 1, },	//  6x12=  72
> #ifdef	TALL_SHAPE
> 	{ 1, 12, 1, 2, },	//  6x24= 144
> #endif
> #ifdef	SQUARE_SHAPE
> 	{ 1, 12, 2, 1, },	// 12x12= 144
70c88,89
< 	{ 2, 14, 1, 1, },	// 17:  7x14=  82
---
> 	{ 1, 12, 2, 2, },	// 12x24= 288
> 	{ 1, 12, 2, 3, },	// 12x36= 432
72c91
< 	{ 2, 14, 1, 2, },	// 18:  7x28= 164
---
> 	{ 1, 12, 2, 4, },	// 12x48= 576
74,76c93,95
< 	{ 2, 14, 2, 2, },	// 19: 14x28= 392
< 	{ 2, 14, 2, 3, },	// 10: 14x42= 588
< 	{ 2, 14, 3, 3, },	// 11: 21x42= 882
---
> 	{ 1, 12, 3, 2, },	// 18x24= 432
> 	{ 1, 12, 3, 3, },	// 18x36= 648
> 	{ 1, 12, 3, 4, },	// 18x48= 864
78,79c97,107
< 	{ 2, 14, 3, 4, },	// 12: 21x56=1176
< 	{ 2, 14, 4, 4, },	// 23: 28x56=1568
---
> 	{ 1, 12, 3, 5, },	// 18x60=1080
> #ifdef	TALL_SHAPE
> 	{ 1, 12, 3, 6, },	// 18x72=1296
> #endif
> #endif
> 	{ 1, 12, 4, 3, },	// 24x36= 864
> #ifdef	HUGE_SHAPE
> 	{ 1, 12, 4, 4, },	// 24x48=1152
> 	{ 1, 12, 4, 6, },	// 24x72=1728
> #ifdef	TALL_SHAPE
> 	{ 1, 12, 4, 8, },	// 24x96=2304
81c109,117
< 	{ 3, 16, 1, 1, },	// 24:  8x16= 128
---
> #endif
> //-----------------------------------
> #ifdef	HUGE_SHAPE
> 	{ 1, 12, 5, 3, },	// 30x36=1080
> 	{ 1, 12, 5, 5, },	// 30x60=1800
> 	{ 1, 12, 5, 7, },	// 30x72=2160
> 	{ 1, 12, 5, 9, },	// 30x108=3240
> #endif
> 	{ 2, 14, 1, 1, },	//  7x14=  98
83c119,122
< 	{ 3, 16, 1, 2, },	// 25:  8x32= 256
---
> 	{ 2, 14, 1, 2, },	//  7x28= 196
> #endif
> #ifdef	SQUARE_SHAPE
> 	{ 2, 14, 2, 1, },	// 14x14= 196
85,86c124,127
< 	{ 3, 16, 2, 2, },	// 26: 16x32= 192
< 	{ 3, 16, 2, 3, },	// 27: 16x48= 288
---
> 	{ 2, 14, 2, 2, },	// 14x28= 392
> 	{ 2, 14, 2, 3, },	// 14x42= 588
> 	{ 2, 14, 3, 2, },	// 21x28= 588
> 	{ 2, 14, 3, 3, },	// 21x42= 882
88,90c129,153
< 	{ 3, 16, 3, 3, },	// 28: 24x48=1152
< 	{ 3, 16, 3, 4, },	// 29: 24x64=1536
< 	{ 3, 16, 4, 4, },	// 30: 32x64=2048
---
> 	{ 2, 14, 3, 4, },	// 21x56=1176
> 	{ 2, 14, 4, 3, },	// 28x42=1176
> 	{ 2, 14, 4, 4, },	// 28x56=1568
> 	{ 2, 14, 4, 6, },	// 28x84=2352
> 	{ 2, 14, 4, 8, },	// 28x112=3136
> #endif
> //-----------------------------------
> 	{ 3, 16, 1, 1, },	//  8x16= 128
> #ifdef	TALL_SHAPE
> 	{ 3, 16, 1, 2, },	//  8x32= 256
> #endif
> 	{ 3, 16, 2, 2, },	// 16x32= 512
> 	{ 3, 16, 2, 3, },	// 16x48= 768
> #ifdef	TALL_SHAPE
> 	{ 3, 16, 2, 4, },	// 16x64=1024
> #endif
> #ifdef	HUGE_SHAPE
> 	{ 3, 16, 3, 2, },	// 24x32= 768
> 	{ 3, 16, 3, 3, },	// 24x48=1152
> 	{ 3, 16, 3, 4, },	// 24x64=1536
> 	{ 3, 16, 3, 6, },	// 24x96=2304
> 	{ 3, 16, 4, 3, },	// 32x48=1536
> 	{ 3, 16, 4, 4, },	// 32x64=2048
> 	{ 3, 16, 4, 6, },	// 32x96=3072
> 	{ 3, 16, 4, 8, },	// 32x128=4096
95,96c158,162
< PRIVATE int comp_font_multi_t(const void *aa, const void *bb);
< PRIVATE int calc_font_pixel_size(font_multi_t *font_multi);
---
> PRIVATE int comp_font_area(const void *aa, const void *bb);
> PRIVATE int comp_font_width(const void *aa, const void *bb);
> PRIVATE int calc_font_area(font_multi_t *font_multi);
> PRIVATE int calc_font_width(font_multi_t *font_multi);
> PRIVATE int calc_font_height(font_multi_t *font_multi);
106c172,173
< 	qsort(font_multi_table, FONT_MULTI_TABLE_ENTRIES, sizeof(font_multi_t), comp_font_multi_t);
---
> 	qsort(font_multi_table, FONT_MULTI_TABLE_ENTRIES, sizeof(font_multi_t), comp_font_area);
> 	qsort(font_multi_table, FONT_MULTI_TABLE_ENTRIES, sizeof(font_multi_t), comp_font_width);
125c192
< PRIVATE int comp_font_multi_t(const void *aa, const void *bb)
---
> PRIVATE int comp_font_area(const void *aa, const void *bb)
127c194
< 	return calc_font_pixel_size((font_multi_t *)aa) - calc_font_pixel_size((font_multi_t *)bb);
---
> 	return calc_font_area((font_multi_t *)aa) - calc_font_area((font_multi_t *)bb);
129c196,204
< PRIVATE int calc_font_pixel_size(font_multi_t *font_multi)
---
> PRIVATE int comp_font_width(const void *aa, const void *bb)
> {
> 	int diff = calc_font_width((font_multi_t *)aa) - calc_font_width((font_multi_t *)bb);
> 	if (diff) {
> 		return diff;
> 	}
> 	return calc_font_height((font_multi_t *)aa) - calc_font_height((font_multi_t *)bb);
> }
> PRIVATE int calc_font_area(font_multi_t *font_multi)
136a212,226
> PRIVATE int calc_font_width(font_multi_t *font_multi)
> {
> 	font_t *font;
> 
> 	font = &fonts__[font_multi->font_idx];
> 	return font->font_width * font_multi->multi_x;
> }
> PRIVATE int calc_font_height(font_multi_t *font_multi)
> {
> 	font_t *font;
> 
> 	font = &fonts__[font_multi->font_idx];
> 	return font->font_height * font_multi->multi_y;
> }
> 
kdiff3 ../old/ucon/hex.c hex.c ==================================================
kdiff3 ../old/ucon/main.c main.c ==================================================
kdiff3 ../old/ucon/message.c message.c ==================================================
kdiff3 ../old/ucon/myminmax.c myminmax.c ==================================================
kdiff3 ../old/ucon/myselect.c myselect.c ==================================================
11c11,12
< int my_select_msec(int fd_read1, int fd_read2, int fd_write1, int fd_write2, int fd_status1, int fd_status2, int msec)
---
> int my_select_msec(int fd_read1, int fd_read2, int fd_write1, int fd_write2,
>  int fd_status1, int fd_status2, int msec)
15c16,17
< int my_select(int fd_read1, int fd_read2, int fd_write1, int fd_write2, int fd_status1, int fd_status2, int usec)
---
> int my_select(int fd_read1, int fd_read2, int fd_write1, int fd_write2,
>  int fd_status1, int fd_status2, int usec)
kdiff3 ../old/ucon/pen.c pen.c ==================================================
kdiff3 ../old/ucon/picofont.c picofont.c ==================================================
31c31,32
<  u_char *pico_font, u_char *gly, int bytes_per_line, int top_space, int bytes_per_digit, int digit_space);
---
>  u_char *pico_font, u_char *gly,
>  int bytes_per_line, int top_space, int bytes_per_digit, int digit_space);
236c237,238
<  u_char *pico_font, u_char *gly, int bytes_per_line, int top_space, int bytes_per_digit, int digit_space)
---
>  u_char *pico_font, u_char *gly,
>  int bytes_per_line, int top_space, int bytes_per_digit, int digit_space)
kdiff3 ../old/ucon/term.cpp term.cpp ==================================================
75a76
> PRIVATE void term_change_rotation(term_t *term, int shift);
214c215,216
< 	snprintf(output_buf, OUTPUT_BUF_LEN, "(((( %s - Framebuffer UTF-8 Console, Ver %s )))) Screen size : %d x %d\r",
---
> 	snprintf(output_buf, OUTPUT_BUF_LEN,
> 	 "(((( %s - Framebuffer UTF-8 Console, Ver %s )))) Screen size : %d x %d\r",
253c255,256
< 		selected = my_select_msec(STDIN_FILENO, term->fd_pty_master, -1, -1, -1, -1, SELECT_TIMEOUT_MSEC);
---
> 		selected = my_select_msec(STDIN_FILENO, term->fd_pty_master, -1, -1, -1, -1,
> 		 SELECT_TIMEOUT_MSEC);
329,335c332,342
< #define ON_THE_FLY_FONT_CHANGE
< #ifdef ON_THE_FLY_FONT_CHANGE
< #define DEC_FONT_SIZE_KEY_STR	"\x1b\x3d"	// Alt-'='
< #define DEC_FONT_SIZE_KEY_STR_LEN	2
< #define INC_FONT_SIZE_KEY_STR	"\x1b\x2b"	// Alt-'+'
< #define INC_FONT_SIZE_KEY_STR_LEN	2
< #endif // ON_THE_FLY_FONT_CHANGE
---
> #define ON_THE_FLY_FUNCTION_CHANGE
> #ifdef ON_THE_FLY_FUNCTION_CHANGE
> #define DEC_FONT_SIZE_KEY1_STR	"\x1b\x2d"	// Alt-'-'
> #define DEC_FONT_SIZE_KEY1_STR_LEN	2
> #define INC_FONT_SIZE_KEY1_STR	"\x1b\x3d"	// Alt-'='
> #define INC_FONT_SIZE_KEY1_STR_LEN	2
> #define DEC_ROTATION_KEY1_STR	"\x1b\x5f"	// Alt-'_'(Shift)
> #define DEC_ROTATION_KEY1_STR_LEN	2
> #define INC_ROTATION_KEY1_STR	"\x1b\x2b"	// Alt-'+'(Shift)
> #define INC_ROTATION_KEY1_STR_LEN	2
> #endif // ON_THE_FLY_FUNCTION_CHANGE
350,352c357,359
< #ifdef ON_THE_FLY_FONT_CHANGE
< 	if ((input_len == DEC_FONT_SIZE_KEY_STR_LEN)
< 	  && (strncmp(buf, DEC_FONT_SIZE_KEY_STR, DEC_FONT_SIZE_KEY_STR_LEN) == 0)) {
---
> #ifdef ON_THE_FLY_FUNCTION_CHANGE
> 	if ((input_len == DEC_FONT_SIZE_KEY1_STR_LEN)
> 	  && (strncmp(buf, DEC_FONT_SIZE_KEY1_STR, DEC_FONT_SIZE_KEY1_STR_LEN) == 0)) {
356,357c363,364
< 	if ((input_len == INC_FONT_SIZE_KEY_STR_LEN)
< 	  && (strncmp(buf, INC_FONT_SIZE_KEY_STR, INC_FONT_SIZE_KEY_STR_LEN) == 0)) {
---
> 	if ((input_len == INC_FONT_SIZE_KEY1_STR_LEN)
> 	  && (strncmp(buf, INC_FONT_SIZE_KEY1_STR, INC_FONT_SIZE_KEY1_STR_LEN) == 0)) {
361c368,376
< #endif // ON_THE_FLY_FONT_CHANGE
---
> 	if ((input_len == DEC_ROTATION_KEY1_STR_LEN)
> 	  && (strncmp(buf, DEC_ROTATION_KEY1_STR, DEC_ROTATION_KEY1_STR_LEN) == 0)) {
> 		term_change_rotation(term, -1);
> 	}
> 	if ((input_len == INC_ROTATION_KEY1_STR_LEN)
> 	  && (strncmp(buf, INC_ROTATION_KEY1_STR, INC_ROTATION_KEY1_STR_LEN) == 0)) {
> 		term_change_rotation(term, +1);
> 	}
> #endif // ON_THE_FLY_FUNCTION_CHANGE
370c385,386
< flf_d_printf("vterm->text_lines:%2d, vterm->text_columns:%2d\n", term->vterm.text_lines, term->vterm.text_columns);
---
> flf_d_printf("vterm->text_lines:%2d, vterm->text_columns:%2d\n",
>  term->vterm.text_lines, term->vterm.text_columns);
376c392,393
< 	cur_font = font_get_font(cur_font_multi_idx, &cur_font_idx, &cur_font_expand_x, &cur_font_expand_y);
---
> 	cur_font = font_get_font(cur_font_multi_idx, &cur_font_idx,
> 	 &cur_font_expand_x, &cur_font_expand_y);
389c406,407
< 	snprintf(overlay_text, OVERLAY_TEXT_LEN+1, "[Screen size(%dx%d) : Font size(%dx%d)]",
---
> 	snprintf(overlay_text, OVERLAY_TEXT_LEN+1,
> 	 "[Screen size(%dx%d) : Font size(%dx%d) : Framebuffer size(%dx%d)]",
391,392c409,410
< 	 cur_font->font_width * cur_font_expand_x,
< 	 cur_font->font_height * cur_font_expand_y);
---
> 	 cur_font->font_width * cur_font_expand_x, cur_font->font_height * cur_font_expand_y,
> 	 frame_buffer__.width, frame_buffer__.height);
398c416,440
< flf_d_printf("vterm->text_lines:%2d, vterm->text_columns:%2d\n\n", term->vterm.text_lines, term->vterm.text_columns);
---
> flf_d_printf("vterm->text_lines:%2d, vterm->text_columns:%2d\n\n",
>  term->vterm.text_lines, term->vterm.text_columns);
> }
> 
> PRIVATE void term_change_rotation(term_t *term, int shift)
> {
> 	char overlay_text[OVERLAY_TEXT_LEN+1];
> 
> ///	vterm->rotation = (vterm->rotation + shift) % max_rotation;
> 
> 	vterm_reinit(&(term->vterm),
> 	 frame_buffer__.width / (cur_font->font_width * cur_font_expand_x),
> 	 frame_buffer__.height / (cur_font->font_height * cur_font_expand_y));
> 	vterm_clear_outside_of_view(&(term->vterm));
> 
> 	vterm_set_overlay(&(term->vterm), OVERLAY_IDX_0, -1, 0,
> 	 COLOR_LIGHTCYAN, COLOR_LIGHTRED, "", 0, 0);
> 	//											1234567890123456789012345678901234567890
> ///	snprintf(overlay_text, OVERLAY_TEXT_LEN+1,
> ///	 "[Screen rotation : %d Degrees]", term->vterm * 90);
> ///	vterm_set_overlay(&(term->vterm), OVERLAY_IDX_0, OVERLAY_TEXT_Y, OVERLAY_TEXT_X,
> ///	 COLOR_LIGHTCYAN, COLOR_LIGHTRED, overlay_text, -1, OVERLAY_TEXT_SECS);
> 
> 	vterm_request_repaint_all(&(term->vterm));
> 	vterm_set_window_size(&(term->vterm));
444d485
< ///	term->fd_tty_vt = -1;
486c527,528
< 	cur_font = font_get_font(cur_font_multi_idx, &cur_font_idx, &cur_font_expand_x, &cur_font_expand_y);
---
> 	cur_font = font_get_font(cur_font_multi_idx, &cur_font_idx,
> 	 &cur_font_expand_x, &cur_font_expand_y);
kdiff3 ../old/ucon/util.c util.c ==================================================
kdiff3 ../old/ucon/vterm.c vterm.c ==================================================
125c125,126
< flf_d_printf("vterm->text_lines:%2d, vterm->text_columns:%2d\n", vterm->text_lines, vterm->text_columns);
---
> flf_d_printf("vterm->text_lines:%2d, vterm->text_columns:%2d\n",
>  vterm->text_lines, vterm->text_columns);
165c166
< ///dump_string(string, bytes);
---
> dump_string(string, bytes);
641a643,647
> 	case '!':			// ESC [ {n} !
> 		vterm->esc_seq_parse_state = ESC_ST_2_CSI;
> 		break;
> 	case 'p':			// Linux "reset" command send ESC [ ! p
> 		break;
1148c1154
< 	flf_d_printf("");
---
> 	flf_d_printf("\n");
kdiff3 ../old/ucon/vtermlow.c vtermlow.c ==================================================
